// Generated by view binder compiler. Do not edit!
package com.plataforma.crpg.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.plataforma.crpg.R;
import com.plataforma.crpg.widgets.BorderedCircle;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.adw.library.widgets.discreteseekbar.DiscreteSeekBar;

public final class ItemBottomSheetLineBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BorderedCircle imageEndLineColor;

  @NonNull
  public final BorderedCircle imageStartLineColor;

  @NonNull
  public final DiscreteSeekBar seekLineDashGap;

  @NonNull
  public final DiscreteSeekBar seekLineDashWidth;

  @NonNull
  public final DiscreteSeekBar seekLineWidth;

  @NonNull
  public final AppCompatSpinner spinnerLineType;

  @NonNull
  public final AppCompatTextView textEndLineColor;

  @NonNull
  public final AppCompatTextView textLineDashGap;

  @NonNull
  public final AppCompatTextView textLineDashWidth;

  @NonNull
  public final AppCompatTextView textLineHeading;

  @NonNull
  public final AppCompatTextView textLineType;

  @NonNull
  public final AppCompatTextView textLineWidth;

  @NonNull
  public final AppCompatTextView textStartLineColor;

  private ItemBottomSheetLineBinding(@NonNull ConstraintLayout rootView,
      @NonNull BorderedCircle imageEndLineColor, @NonNull BorderedCircle imageStartLineColor,
      @NonNull DiscreteSeekBar seekLineDashGap, @NonNull DiscreteSeekBar seekLineDashWidth,
      @NonNull DiscreteSeekBar seekLineWidth, @NonNull AppCompatSpinner spinnerLineType,
      @NonNull AppCompatTextView textEndLineColor, @NonNull AppCompatTextView textLineDashGap,
      @NonNull AppCompatTextView textLineDashWidth, @NonNull AppCompatTextView textLineHeading,
      @NonNull AppCompatTextView textLineType, @NonNull AppCompatTextView textLineWidth,
      @NonNull AppCompatTextView textStartLineColor) {
    this.rootView = rootView;
    this.imageEndLineColor = imageEndLineColor;
    this.imageStartLineColor = imageStartLineColor;
    this.seekLineDashGap = seekLineDashGap;
    this.seekLineDashWidth = seekLineDashWidth;
    this.seekLineWidth = seekLineWidth;
    this.spinnerLineType = spinnerLineType;
    this.textEndLineColor = textEndLineColor;
    this.textLineDashGap = textLineDashGap;
    this.textLineDashWidth = textLineDashWidth;
    this.textLineHeading = textLineHeading;
    this.textLineType = textLineType;
    this.textLineWidth = textLineWidth;
    this.textStartLineColor = textStartLineColor;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBottomSheetLineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBottomSheetLineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_bottom_sheet_line, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBottomSheetLineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      BorderedCircle imageEndLineColor = rootView.findViewById(R.id.image_end_line_color);
      if (imageEndLineColor == null) {
        missingId = "imageEndLineColor";
        break missingId;
      }
      BorderedCircle imageStartLineColor = rootView.findViewById(R.id.image_start_line_color);
      if (imageStartLineColor == null) {
        missingId = "imageStartLineColor";
        break missingId;
      }
      DiscreteSeekBar seekLineDashGap = rootView.findViewById(R.id.seek_line_dash_gap);
      if (seekLineDashGap == null) {
        missingId = "seekLineDashGap";
        break missingId;
      }
      DiscreteSeekBar seekLineDashWidth = rootView.findViewById(R.id.seek_line_dash_width);
      if (seekLineDashWidth == null) {
        missingId = "seekLineDashWidth";
        break missingId;
      }
      DiscreteSeekBar seekLineWidth = rootView.findViewById(R.id.seek_line_width);
      if (seekLineWidth == null) {
        missingId = "seekLineWidth";
        break missingId;
      }
      AppCompatSpinner spinnerLineType = rootView.findViewById(R.id.spinner_line_type);
      if (spinnerLineType == null) {
        missingId = "spinnerLineType";
        break missingId;
      }
      AppCompatTextView textEndLineColor = rootView.findViewById(R.id.text_end_line_color);
      if (textEndLineColor == null) {
        missingId = "textEndLineColor";
        break missingId;
      }
      AppCompatTextView textLineDashGap = rootView.findViewById(R.id.text_line_dash_gap);
      if (textLineDashGap == null) {
        missingId = "textLineDashGap";
        break missingId;
      }
      AppCompatTextView textLineDashWidth = rootView.findViewById(R.id.text_line_dash_width);
      if (textLineDashWidth == null) {
        missingId = "textLineDashWidth";
        break missingId;
      }
      AppCompatTextView textLineHeading = rootView.findViewById(R.id.text_line_heading);
      if (textLineHeading == null) {
        missingId = "textLineHeading";
        break missingId;
      }
      AppCompatTextView textLineType = rootView.findViewById(R.id.text_line_type);
      if (textLineType == null) {
        missingId = "textLineType";
        break missingId;
      }
      AppCompatTextView textLineWidth = rootView.findViewById(R.id.text_line_width);
      if (textLineWidth == null) {
        missingId = "textLineWidth";
        break missingId;
      }
      AppCompatTextView textStartLineColor = rootView.findViewById(R.id.text_start_line_color);
      if (textStartLineColor == null) {
        missingId = "textStartLineColor";
        break missingId;
      }
      return new ItemBottomSheetLineBinding((ConstraintLayout) rootView, imageEndLineColor,
          imageStartLineColor, seekLineDashGap, seekLineDashWidth, seekLineWidth, spinnerLineType,
          textEndLineColor, textLineDashGap, textLineDashWidth, textLineHeading, textLineType,
          textLineWidth, textStartLineColor);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
